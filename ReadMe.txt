### OpenCL Procedural Noise Example ###===========================================================================DESCRIPTION:This example shows how OpenCL can be used for procedural texture synthesisand intermix with existing OpenGL textures for display.  Several computekernels are provided which generate a variety of procedural functions,including gradient noise (aka Perlin Noise), turbulence and otherfractals.Note that the .cl compute kernel file(s) are loaded and compiled atruntime.  The example source assumes that these files are in the same path as the built executable.For simplicity, this example is intended to be run from the command line.If run from within XCode, open the Run Log (Command-Shift-R) to see the output.  Alternatively, run the applications from within a Terminal.app session to launch from the command line.===========================================================================BUILD REQUIREMENTS:Mac OS X v10.6 or later===========================================================================RUNTIME REQUIREMENTS:Mac OS X v10.6 or later with OpenCL 1.0Requires image support if USE_GL_ATTACHMENTS flag is set to 1 in noise.c ===========================================================================PACKAGING LIST:ReadMe.txtnoise.cnoise.xcodeprojnoise_kernel.cl===========================================================================CHANGES FROM PREVIOUS VERSIONS:Version 1.0- First version.===========================================================================Copyright (C) 2008 Apple Inc. All rights reserved.